%% -*- erlang -*-
{erl_opts, [
    debug_info,
    warn_untyped_record,
    {feature, all, enable}
]}.

{cover_enabled, true}.
{cover_opts, [verbose]}.
{cover_export_enabled, true}.
{covertool, [{coverdata_files, ["ct.coverdata"]}]}.

{deps, [
    gproc,
    erlware_commons,
    types,
    telemetry,
    {uuid, {pkg, uuid_erl}},
    {partisan, {
        git,
        "http://github.com/lasp-lang/partisan.git",
        {tag, "v5.0.0-rc.4"}
    }},
    {plum_db,{
        git,
        "https://github.com/leapsight/plum_db.git",
        {tag, "1.0.7"}
    }},
    {sbroker, {
        git,
        "https://github.com/Leapsight/sbroker.git",
        {branch, "master"}
    }},
    {opentelemetry_api, {
        git,
        "https://github.com/open-telemetry/opentelemetry-erlang-api.git",
        {branch, "master"}
    }}
]}.

{relx, [
    {release, {erleans, "node"}, [
        %% Erlang
        compiler,
        crypto,
        debugger,
        inets,
        kernel,
        os_mon,
        runtime_tools,
        sasl,
        stdlib,
        tools,
        %% Third-parties
        uuid,
        gproc,
        sbroker,
        erlware_commons,
        opentelemetry_api,
        {partisan, load},
        {plum_db, load},
        erleans
    ]},
    {dev_mode, false},
    {include_src, false},
    {include_erts, true},
    {extended_start_script, true}
]}.

{profiles, [
    {db, [
        {deps, []},
        {ct_opts, [{sys_config, "test/db_sys.config"}]}
    ]},
    {node1, [
        {src_dirs, ["src", "test"]},
        {sys_config_src, "./config/sys.config.src"},
        {vm_args_src, "./config/vm.args.src"}
    ]},
    {node2, [
        {src_dirs, ["src", "test"]},
        {sys_config_src, "./config/sys.config.src"},
        {vm_args_src, "./config/vm.args.src"}
    ]},
    {node3, [
        {src_dirs, ["src", "test"]},
        {sys_config_src, "./config/sys.config.src"},
        {vm_args_src, "./config/vm.args.src"}
    ]},
    {test, [
        {deps, []},
        {erl_opts, [nowarn_export_all]},
        {dist_node, [{name, 'ct@127.0.0.1'}]}
    ]}
]}.

{ct_opts, [{sys_config, "test/sys.config"}]}.

{project_plugins, [
    rebar_alias,
    {
        rebar_covertool,
        {git, "https://github.com/tsloughter/covertool.git", {branch, "master"}}},
    rebar3_format
]}.

{format, [
    {files, ["src/*.erl", "include/*.hrl"]},
    {formatter, default_formatter},
    {options, #{
        paper => 80,
        ribbon => 80,
        break_indent => 4,
        sub_indent => 0,
        unquote_atoms => true,
        truncate_strings => true,
        inline_expressions => true,
        inline_clause_bodies => false,
        inline_simple_funs => false,
        inline_items => {when_under, 5},
        inline_attributes => {when_under, 5},
        inline_fields => {when_under, 5},
        inline_qualified_function_composition => true,
        inline_clause_bodies => false,
        parenthesize_infix_operations => false,
        spaces_around_arguments => false,
        spaces_around_fields => false,
        preserve_empty_lines => true,
        sort_arity_qualifiers => true
    }}
]}.


{alias, [{test, [ct]},
         {check, [ct, xref, dialyzer, cover]}]}.

{dist_node, [{name, 'erleans@127.0.0.1'}]}.
{shell, [{apps, [erleans]},
         {config, "config/sys.config"}]}.

{xref_checks, [undefined_function_calls, undefined_functions,
               deprecated_function_calls, deprecated_functions]}.

